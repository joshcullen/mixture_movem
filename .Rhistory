axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14),
strip.text.x = element_text(face = "bold")) +
scale_fill_manual(values = c(viridis::viridis(5),
"grey35","grey35"), guide = FALSE) +
scale_y_continuous(breaks = c(0.00, 0.50, 1.00)) +
scale_x_continuous(breaks = 1:8) +
facet_grid(behav ~ var, scales = "free_x")
# Plot histograms of proportion data
lilibrary(ggplot2)
# Plot histograms of proportion data
library(ggplot2)
ggplot(behav.res, aes(x = bin, y = prop, fill = as.factor(behav))) +
geom_bar(stat = 'identity') +
labs(x = "\nBin", y = "Proportion\n") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14),
strip.text.x = element_text(face = "bold")) +
scale_fill_manual(values = c(viridis::viridis(5),
"grey35","grey35"), guide = FALSE) +
scale_y_continuous(breaks = c(0.00, 0.50, 1.00)) +
scale_x_continuous(breaks = 1:8) +
facet_grid(behav ~ var, scales = "free_x")
library(bayesmove)
data("tracks.list")
#subset only first track
tracks.list<- dplyr::bind_rows(tracks.list)
#only retain id and discretized step length (SL) and turning angle (TA) columns
tracks<- subset(tracks.list, select = c(id, SL, TA))
set.seed(1)
# Define model params
alpha=0.1
ngibbs=1000
nburn=ngibbs/2
nmaxclust=7
# future::plan(future::multisession)  #run all MCMC chains in parallel
# dat.res<- segment_behavior(data = tracks.list2, ngibbs = ngibbs, nbins = nbins,
#                            alpha = alpha)
model1=mixture_movement(dat=tracks[,-1],alpha=alpha,ngibbs=ngibbs,nmaxclust=nmaxclust,nburn=nburn)
# rm(list=ls(all=TRUE))
library('MCMCpack')
library('Rcpp')
source('mixmov_function.R')
source('mixmov_gibbs.R')
sourceCpp('aux1.cpp')
set.seed(1)
# Define model params
alpha=0.1
ngibbs=1000
nburn=ngibbs/2
nmaxclust=7
# future::plan(future::multisession)  #run all MCMC chains in parallel
# dat.res<- segment_behavior(data = tracks.list2, ngibbs = ngibbs, nbins = nbins,
#                            alpha = alpha)
model1=mixture_movement(dat=tracks[,-1],alpha=alpha,ngibbs=ngibbs,nmaxclust=nmaxclust,nburn=nburn)
plot(model1$loglikel, type = "l")
plot(model1$gamma1, type = "l")
View(model1)
MAP.iter<- get_MAP(dat = model1, nburn = nburn)
get_MAP
MAP.iter<- get_MAP(dat = model1$theta, nburn = nburn)
bayesmove::get_MAP_internal
bayesmove::::get_MAP_internal
bayesmove:::get_MAP_internal
MAP.iter<- get_MAP(dat = model1$loglikel, nburn = nburn)
MAP.iter<- bayesmove:::get_MAP_internal(dat = model1$loglikel, nburn = nburn)
MAP.est<- model1$loglikel[-1] %>%
order(decreasing = T)
which.max(model1$loglikel[-1])
theta<- model1$theta[MAP.iter,]
theta %>% cumsum()
theta
names(theta)
names(theta)<- 1:ncol(theta)
1:length(theta)
names(theta)<- 1:length(theta)
theta<- sort(theta, decreasing = TRUE)
theta
theta %>% cumsum()
ord<- as.numeric(names(theta))
get_behav_hist1=function(dat, nburn, ngibbs, nmaxclust, var.names, ord, MAP.iter) {
#summarize cluster results by frequency and proportion
behav.list<- list()
for (i in 1:length(dat$phi)) {
if ("z" %in% names(dat)) {  #for mixture model
tmp<- matrix(dat$phi[[i]][MAP.iter,], 1, ncol(dat$phi[[i]]))
tmp1<- matrix(tmp, ncol(tmp) / nmaxclust, nmaxclust, byrow = T)
tmp1<- tmp1[,as.numeric(ord)]
} else {  #for LDA
tmp<- matrix(dat$phi[[i]][(nburn+1):ngibbs,], length((nburn+1):ngibbs),
ncol(dat$phi[[i]]))
tmp1<- matrix(colMeans(tmp), ncol(tmp) / nmaxclust, nmaxclust, byrow = T)
}
behav.list[[i]]<- data.frame(bin = 1:nrow(tmp1), tmp1) %>%
dplyr::rename_at(dplyr::vars(tidyr::starts_with('X')), ~as.character(1:ncol(tmp1))) %>%
tidyr::pivot_longer(-.data$bin, names_to = "behav", values_to = "prop") %>%
dplyr::arrange(.data$behav) %>%
dplyr::mutate(var = var.names[i])
}
#combine params
behav.res<- dplyr::bind_rows(behav.list)
behav.res
}
behav.res<- get_behav_hist1(dat = model1, nburn = nburn, ngibbs = ngibbs, nmaxclust = nmaxclust,
var.names = c("Step Length","Turning Angle"), ord = ord,
MAP.iter = MAP.iter)
View(behav.res)
# Plot histograms of proportion data
library(ggplot2)
ggplot(behav.res, aes(x = bin, y = prop, fill = as.factor(behav))) +
geom_bar(stat = 'identity') +
labs(x = "\nBin", y = "Proportion\n") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14),
strip.text.x = element_text(face = "bold")) +
scale_fill_manual(values = c(viridis::viridis(5),
"grey35","grey35"), guide = FALSE) +
scale_y_continuous(breaks = c(0.00, 0.50, 1.00)) +
scale_x_continuous(breaks = 1:8) +
facet_grid(behav ~ var, scales = "free_x")
View(tracks)
tracks<- tracks[,-c("id")]
tracks<- tracks[,-"id"]
ind<- which(names(tracks) == "id")
ind<- which(colnames(tracks) == "id")
View(model1)
View(model1)
library(bayesmove)
data(tracks.list)
#subset only first track
tracks.list<- dplyr::bind_rows(tracks.list)
#only retain id and discretized step length (SL) and turning angle (TA) columns
tracks<- subset(tracks.list, select = c(id, SL, TA))
set.seed(1)
# Define model params
alpha=0.1
ngibbs=1000
nburn=ngibbs/2
nmaxclust=7
model1=cluster_obs(dat=tracks, alpha=alpha, ngibbs=ngibbs, nmaxclust=nmaxclust, nburn=nburn)
plot(model1$loglikel, type = "l")
plot(model1$gamma1, type = "l")
MAP.iter<- bayesmove:::get_MAP_internal(dat = model1$loglikel, nburn = nburn)
theta<- model1$theta[MAP.iter,]
names(theta)<- 1:length(theta)
theta<- sort(theta, decreasing = TRUE)
theta %>% cumsum()  #first 5 states optimal (i.e. > 90%)
ord<- as.numeric(names(theta))
behav.res<- get_behav_hist1(dat = model1, nburn = nburn, ngibbs = ngibbs, nmaxclust = nmaxclust,
var.names = c("Step Length","Turning Angle"), ord = ord,
MAP.iter = MAP.iter)
behav.res<- get_behav_hist(dat = model1, nburn = nburn, ngibbs = ngibbs, nmaxclust = nmaxclust,
var.names = c("Step Length","Turning Angle"), ord = ord,
MAP.iter = MAP.iter)
library(ggplot2)
ggplot(behav.res, aes(x = bin, y = prop, fill = as.factor(behav))) +
geom_bar(stat = 'identity') +
labs(x = "\nBin", y = "Proportion\n") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14),
strip.text.x = element_text(face = "bold")) +
scale_fill_manual(values = c(viridis::viridis(5),
"grey35","grey35"), guide = FALSE) +
scale_y_continuous(breaks = c(0.00, 0.50, 1.00)) +
scale_x_continuous(breaks = 1:8) +
facet_grid(behav ~ var, scales = "free_x")
future:::ClusterRegistry("stop")
library(adehabitatLT)
data<- NMs.CRW(N=1, nlocs = 100, rho = 0, h = 1, x0 = c(0,0))
head(data[[1]])
data[[1]]$xyt
data<- simm.crw()
View(data)
head(data[[1]])
plot(data[,1:2])
plot(data[[1]][,1:2])
plot(data[[1]][,1:2]); lines(data[[1]][,1:2])
data<- simm.crw(date = 1:1000)
plot(data[[1]][,1:2]); lines(data[[1]][,1:2])
hist(data[[1]]$dist)
hist(data[[1]]$rel.angle)
?simm.crw
data("puechabonsp")
View(puechabonsp)
data(whale)
plot(whale)
summary(whale[[1]])
hist(whale[[1]])
hist(whale[[1]]$dist)
hist(whale[[1]]$rel.angle)
data("porpoise")
porp<- dplyr::bind_rows(porpoise)
hist(porp$dist)
hist(porp$rel.angle)
plot(porpoise)
angle.bin.lims<- seq(from = -pi, to = pi, length.out = 9)
View(porp)
table(porp$dt)
dist.bin.lims<- quantile(c(0,0.25,0.5,0.75,0.90,1), na.rm = T)
dist.bin.lims
?quantile
dist.bin.lims<- quantile(porp$dist, c(0,0.25,0.5,0.75,0.90,1), na.rm = T)
dist.bin.lims
?porpoise
View(porp)
library(tidyverse)
library(bayesmove)
porp2<- map(porpoise, discrete_move_var, lims = list(dist.bin.lims, angle.bin.lims),
varIn = c("dist","rel.angle"), varOut = c("SL","TA"))
View(porp2)
View(porp2[[1]])
#subset only first track
porp.df<- dplyr::bind_rows(porp2)
#only retain id and discretized step length (SL) and turning angle (TA) columns
porp.df2<- subset(porp.df, select = c(id, SL, TA))
View(porp.df)
View(porpoise)
plot(porpoise)
porpoise
porp2
foo<- ld(porpoise)
View(foo)
porp<- ld(porpoise)
hist(porp$rel.angle)
hist(porp$dist)
plot(porpoise)
discrete_move_var
porp2<- discrete_move_var(porp, lims = list(dist.bin.lims, angle.bin.lims),
varIn = c("dist","rel.angle"), varOut = c("SL","TA"))
View(porp2)
porp3<- porp2 %>%
df_to_list(ind = "id") %>%
map(., ~mutate(time1 = 1:nrow(.)))
porp3<- porp2 %>%
df_to_list(ind = "id") %>%
map(., ~mutate(time1 = 1:nrow()))
porp3<- porp2 %>%
df_to_list(ind = "id") %>%
map(., ~mutate(time1 = 1:nrow(.data)))
porp3<- porp2 %>%
df_to_list(ind = "id")
rm(porp3)
porp3<- porp2 %>%
df_to_list(ind = "id") %>%
map(.data, ~mutate(time1 = 1:nrow(.x)))
porp3<- porp2 %>%
df_to_list(ind = "id") %>%
map(~mutate(time1 = 1:nrow(.x)))
porp3<- porp2 %>%
df_to_list(ind = "id") %>%
map(., ~mutate(., time1 = 1:nrow(.x)))
View(porp3)
View(porp3[["GUS"]])
View(porp3[["David"]])
porp3<- porp2 %>%
df_to_list(ind = "id") %>%
map(., ~mutate(., time1 = 1:nrow(.x))) %>%
bind_rows()
#only retain id and discretized step length (SL) and turning angle (TA) columns
porp.list<- subset(porp3, select = c(id, SL, TA)) %>%
df_to_list(ind = "id")
set.seed(1)
# Define model params
alpha=0.1
ngibbs=1000
nburn=ngibbs/2
nmaxclust=7
#only retain id and discretized step length (SL) and turning angle (TA) columns
porp.sub<- subset(porp3, select = c(id, SL, TA))
set.seed(1)
# Define model params
alpha=0.1
ngibbs=1000
nburn=ngibbs/2
nmaxclust=7
dat.res<- cluster_obs(dat=porp.sub, alpha=alpha, ngibbs=ngibbs, nmaxclust=nmaxclust, nburn=nburn)
plot(dat.res$loglikel, type = "l")
plot(dat.res$gamma1, type = "l")
MAP.iter<- bayesmove:::get_MAP_internal(dat = dat.res$loglikel, nburn = nburn)
theta<- dat.res$theta[MAP.iter,]
names(theta)<- 1:length(theta)
theta
theta<- sort(theta, decreasing = TRUE)
theta
theta %>% cumsum()  #first 5 states optimal (i.e. > 90%)
ord<- as.numeric(names(theta))
behav.res<- get_behav_hist(dat = dat.res, nburn = nburn, ngibbs = ngibbs, nmaxclust = nmaxclust,
var.names = c("Step Length","Turning Angle"), ord = ord,
MAP.iter = MAP.iter)
ggplot(behav.res, aes(x = bin, y = prop, fill = as.factor(behav))) +
geom_bar(stat = 'identity') +
labs(x = "\nBin", y = "Proportion\n") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14),
strip.text.x = element_text(face = "bold")) +
scale_fill_manual(values = c(viridis::viridis(3), "grey35","grey35",
"grey35","grey35"), guide = FALSE) +
scale_y_continuous(breaks = c(0.00, 0.50, 1.00)) +
scale_x_continuous(breaks = 1:8) +
facet_grid(behav ~ var, scales = "free_x")
data("albatross")
albatross
plot(albatross)
alb<- ld(albatross)  #convert from ltraj to data frame
hist(alb$dist)
hist(alb$rel.angle)
hist(alb$dt)
table(alb$dt)
table(alb$dt) %>% sort(decreasing = T)
plot(albatross)
data(bear)
bear
plot(bear)
hist(bear$dist)
bear2<- ld(bear)  #convert from ltraj to data frame
hist(bear2$dist)
hist(bear2$rel.angle)
table(bear2$dt) %>% sort(decreasing = T)
table(bear2$dt)
1800/60
View(bear2)
plot(bear)
dist.bin.lims<- quantile(porp$dist, c(0,0.25,0.5,0.75,0.90,1), na.rm = T)  #5 bins
dist.bin.lims
dist.bin.lims<- quantile(bear2$dist, c(0,0.25,0.5,0.75,0.90,1), na.rm = T)  #5 bins
dist.bin.lims
bear3<- discrete_move_var(bear2, lims = list(dist.bin.lims, angle.bin.lims),
varIn = c("dist","rel.angle"), varOut = c("SL","TA"))
porp4<- porp3 %>%
df_to_list(ind = "id") %>%
map(., ~mutate(., time1 = 1:nrow(.x))) %>%
bind_rows()
bear4<- porp3 %>%
df_to_list(ind = "id") %>%
map(., ~mutate(., time1 = 1:nrow(.x))) %>%
bind_rows()
bear4<- bear3 %>%
df_to_list(ind = "id") %>%
map(., ~mutate(., time1 = 1:nrow(.x))) %>%
bind_rows()
#only retain id and discretized step length (SL) and turning angle (TA) columns
bear.sub<- subset(bear4, select = c(id, SL, TA))
View(bear.sub)
set.seed(1)
# Define model params
alpha=0.1
ngibbs=1000
nburn=ngibbs/2
nmaxclust=7
dat.res<- cluster_obs(dat=bear.sub, alpha=alpha, ngibbs=ngibbs, nmaxclust=nmaxclust, nburn=nburn)
plot(dat.res$loglikel, type = "l")
plot(dat.res$gamma1, type = "l")
MAP.iter<- bayesmove:::get_MAP_internal(dat = dat.res$loglikel, nburn = nburn)
theta<- dat.res$theta[MAP.iter,]
names(theta)<- 1:length(theta)
theta
theta<- sort(theta, decreasing = TRUE)
theta
theta %>% cumsum()  #first 5 states optimal (i.e. > 90%)
ord<- as.numeric(names(theta))
behav.res<- get_behav_hist(dat = dat.res, nburn = nburn, ngibbs = ngibbs, nmaxclust = nmaxclust,
var.names = c("Step Length","Turning Angle"), ord = ord,
MAP.iter = MAP.iter)
ggplot(behav.res, aes(x = bin, y = prop, fill = as.factor(behav))) +
geom_bar(stat = 'identity') +
labs(x = "\nBin", y = "Proportion\n") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14),
strip.text.x = element_text(face = "bold")) +
scale_fill_manual(values = c(viridis::viridis(3), "grey35","grey35",
"grey35","grey35"), guide = FALSE) +
scale_y_continuous(breaks = c(0.00, 0.50, 1.00)) +
scale_x_continuous(breaks = 1:8) +
facet_grid(behav ~ var, scales = "free_x")
data("buffalo")
buff<- ld(buffalo)
buffalo
buff<- ld(buffalo$traj)
hist(buff$dist)
hist(buff$rel.angle)
table(buff$dt)
table(buff$dt) %>% sort(decreasing = T)
install.packages("movevis")
install.packages("moveVis")
library(move)
data("leroy")
leroy
foo<- data.frame(leroy)
View(foo)
hist(foo$dist)
View(foo)
plot(leroy)
plot(leroy); lines(leroy)
leroy2<- data.frame(leroy)
View(leroy2)
leroy2<- prep_data(dat = leroy2, coord.names = c("utm.easting","utm.northing"), id = "id")
leroy2$id<- "leroy"
leroy2<- prep_data(dat = leroy2, coord.names = c("utm.easting","utm.northing"), id = "id")
View(leroy2)
rlang::last_error()
leroy2
leroy2<- data.frame(leroy)
leroy2$id<- "leroy"
leroy2<- prep_data(dat = leroy2, coord.names = c("utm.easting","utm.northing"), id = "id")
str(leroy2)
prep_data
bayesmove:::prep_data_internal
View(leroy2)
leroy2<- data.frame(leroy) %>%
mutate(id = "leroy") %>%
rename(date = study.local.timestamp)
View(leroy2)
leroy2<- prep_data(dat = leroy2, coord.names = c("utm.easting","utm.northing"), id = "id")
View(leroy2)
hist(leroy2$step)
hist(leroy2$angle)
table(leroy2$dt) %>% sort(decreasing = T)
900/60
summary(leroy2)
leroy2$date
leroy3<- round_track_time(dat = leroy2, id = "id", int = 900, tol = 60, time.zone = "UTC")
table(leroy3$dt)
table(leroy3$dt) %>% sort(decreasing = T)
leroy3<- round_track_time(dat = leroy2, id = "id", int = 900, tol = 120, time.zone = "UTC")
table(leroy3$dt) %>% sort(decreasing = T)
# Create list from data frame
leroy.list<- df_to_list(dat = leroy3, ind = "id")
# Filter observations
tracks_filt.list<- filter_time(dat.list = tracks.list, int = 3600)
# Filter observations
leroy_filt.list<- filter_time(dat.list = leroy.list, int = 900)
# Define bin number and limits for turning angles
angle.bin.lims=seq(from=-pi, to=pi, by=pi/4)  #8 bins
# Define bin number and limits for step lengths
dist.bin.lims=quantile(leroy3[leroy3$dt == 900,]$step,
c(0,0.25,0.50,0.75,0.90,1), na.rm=T)  #5 bins
dist.bin.lims
# Assign bins to observations
leroy_disc.list<- map(leroy_filt.list,
discrete_move_var,
lims = list(dist.bin.lims, angle.bin.lims),
varIn = c("step", "angle"),
varOut = c("SL", "TA"))
# Filter observations
leroy_filt<- filter_time(dat.list = leroy.list, int = 900) %>%
bind_rows
# Define bin number and limits for step lengths
dist.bin.lims=quantile(leroy_filt$step, c(0,0.25,0.50,0.75,0.90,1), na.rm=T)  #5 bins
leroy_filt2<- discrete_move_var(leroy_filt, lims = list(dist.bin.lims, angle.bin.lims),
varIn = c("dist","rel.angle"), varOut = c("SL","TA"))
leroy_filt2<- discrete_move_var(leroy_filt, lims = list(dist.bin.lims, angle.bin.lims),
varIn = c("step","angle"), varOut = c("SL","TA"))
#only retain id and discretized step length (SL) and turning angle (TA) columns
leroy.sub<- subset(leroy_filt2, select = c(id, SL, TA))
set.seed(1)
# Define model params
alpha=0.1
ngibbs=1000
nburn=ngibbs/2
nmaxclust=7
dat.res<- cluster_obs(dat=leroy.sub, alpha=alpha, ngibbs=ngibbs, nmaxclust=nmaxclust, nburn=nburn)
plot(dat.res$loglikel, type = "l")
plot(dat.res$gamma1, type = "l")
MAP.iter<- bayesmove:::get_MAP_internal(dat = dat.res$loglikel, nburn = nburn)
theta<- dat.res$theta[MAP.iter,]
names(theta)<- 1:length(theta)
theta
theta<- sort(theta, decreasing = TRUE)
theta
theta
theta %>% cumsum()  #first 5 states optimal (i.e. > 90%)
ord<- as.numeric(names(theta))
behav.res<- get_behav_hist(dat = dat.res, nburn = nburn, ngibbs = ngibbs, nmaxclust = nmaxclust,
var.names = c("Step Length","Turning Angle"), ord = ord,
MAP.iter = MAP.iter)
ggplot(behav.res, aes(x = bin, y = prop, fill = as.factor(behav))) +
geom_bar(stat = 'identity') +
labs(x = "\nBin", y = "Proportion\n") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text.y = element_text(size = 14),
axis.text.x.bottom = element_text(size = 12),
strip.text = element_text(size = 14),
strip.text.x = element_text(face = "bold")) +
scale_fill_manual(values = c(viridis::viridis(3), "grey35","grey35",
"grey35","grey35"), guide = FALSE) +
scale_y_continuous(breaks = c(0.00, 0.50, 1.00)) +
scale_x_continuous(breaks = 1:8) +
facet_grid(behav ~ var, scales = "free_x")
data("fishers")
View(fishers)
plot(fishers)
lines(fishers)
fishers2<- data.frame(fishers)
View(fishers2)
fishers
trackId(fishers)
